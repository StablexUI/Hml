#include <hxcpp.h>

namespace hx {
const char *__hxcpp_all_files[] = {
#ifdef HXCPP_DEBUGGER
"/usr/lib/haxe/std/List.hx",
"/usr/lib/haxe/std/StringTools.hx",
"/usr/lib/haxe/std/Xml.hx",
"/usr/lib/haxe/std/cpp/Lib.hx",
"/usr/lib/haxe/std/cpp/_std/EReg.hx",
"/usr/lib/haxe/std/cpp/_std/Reflect.hx",
"/usr/lib/haxe/std/cpp/_std/Std.hx",
"/usr/lib/haxe/std/cpp/_std/StringBuf.hx",
"/usr/lib/haxe/std/cpp/_std/Type.hx",
"/usr/lib/haxe/std/cpp/_std/haxe/ds/StringMap.hx",
"/usr/lib/haxe/std/haxe/CallStack.hx",
"/usr/lib/haxe/std/haxe/Log.hx",
"/usr/lib/haxe/std/haxe/Timer.hx",
"/usr/lib/haxe/std/haxe/rtti/Rtti.hx",
"/usr/lib/haxe/std/haxe/rtti/XmlParser.hx",
"/usr/lib/haxe/std/haxe/unit/TestCase.hx",
"/usr/lib/haxe/std/haxe/unit/TestRunner.hx",
"/usr/lib/haxe/std/haxe/xml/Fast.hx",
"/usr/lib/haxe/std/haxe/xml/Parser.hx",
"/usr/lib/haxe/std/haxe/xml/Printer.hx",
"Child.hx",
"ChildWidgetNodeTest.hx",
"Exception.hx",
"HUnit.hx",
"Metric.hx",
"MetricValueTest.hx",
"Signal.hx",
"SignalValueTest.hx",
"exception/StackTools.hx",
"hunit/Match.hx",
"hunit/TestCase.hx",
"hunit/TestState.hx",
"hunit/TestSuite.hx",
"hunit/Utils.hx",
"hunit/assert/AssertFactory.hx",
"hunit/assert/BaseAssert.hx",
"hunit/assert/MatchAssert.hx",
"hunit/call/Call.hx",
"hunit/call/Expect.hx",
"hunit/call/Stub.hx",
"hunit/exceptions/AssertException.hx",
"hunit/exceptions/CircularTestDependencyException.hx",
"hunit/exceptions/ExpectedExceptionData.hx",
"hunit/exceptions/InvalidTestException.hx",
"hunit/exceptions/NoExpectedException.hx",
"hunit/exceptions/TestFailException.hx",
"hunit/exceptions/UnexpectedCallException.hx",
"hunit/exceptions/UnexpectedException.hx",
"hunit/exceptions/UnmetExpectationException.hx",
"hunit/exceptions/WarningException.hx",
"hunit/match/AnyMatch.hx",
"hunit/match/CallbackMatch.hx",
"hunit/match/ERegMatch.hx",
"hunit/match/EqualMatch.hx",
"hunit/match/GenericMatchFactory.hx",
"hunit/match/Match.hx",
"hunit/match/MatchFactory.hx",
"hunit/match/MatchFailDescription.hx",
"hunit/match/NotEqualMatch.hx",
"hunit/match/SimilarMatch.hx",
"hunit/match/TypeMatch.hx",
"hunit/match/similar/SimilarArrayMatch.hx",
"hunit/match/similar/SimilarMapMatch.hx",
"hunit/match/similar/SimilarObjectMatch.hx",
"hunit/mock/MockBuilder.hx",
"hunit/mock/MockData.hx",
"hunit/report/DefaultWriter.hx",
"hunit/report/TestReport.hx",
"hunit/utils/CTypeClassFieldUtils.hx",
"hunit/utils/TestCaseData.hx",
"hunit/utils/Value.hx",
"hunit/warnings/ForcedWarning.hx",
"hunit/warnings/IncompleteTestWarning.hx",
"hunit/warnings/NoAssertionsWarning.hx",
"hunit/warnings/NoTestsWarning.hx",
"hunit/warnings/Warning.hx",
"sx/Sx.hx",
"sx/backend/dummy/Backend.hx",
"sx/backend/dummy/BackendManager.hx",
"sx/backend/dummy/BitmapRenderer.hx",
"sx/backend/dummy/Point.hx",
"sx/backend/dummy/TextInputRenderer.hx",
"sx/backend/dummy/TextRenderer.hx",
"sx/ds/ObjectPool.hx",
"sx/exceptions/InvalidBackendException.hx",
"sx/exceptions/LockedPropertyException.hx",
"sx/exceptions/LoopedResizeException.hx",
"sx/exceptions/NoReadException.hx",
"sx/exceptions/NotChildException.hx",
"sx/exceptions/OutOfBoundsException.hx",
"sx/exceptions/SxException.hx",
"sx/layout/Layout.hx",
"sx/properties/Align.hx",
"sx/properties/AutoSize.hx",
"sx/properties/abstracts/AAlign.hx",
"sx/properties/abstracts/AAutoSize.hx",
"sx/properties/abstracts/ACoordinate.hx",
"sx/properties/abstracts/APadding.hx",
"sx/properties/abstracts/ASize.hx",
"sx/properties/abstracts/ASizeGetterProxy.hx",
"sx/properties/abstracts/ASizeSetterProxy.hx",
"sx/properties/displaylist/ArrayDisplayList.hx",
"sx/properties/metric/Coordinate.hx",
"sx/properties/metric/Offset.hx",
"sx/properties/metric/Padding.hx",
"sx/properties/metric/Size.hx",
"sx/properties/metric/SizeSetterProxy.hx",
"sx/signals/Signal.hx",
"sx/skins/ASkin.hx",
"sx/skins/base/SkinBase.hx",
"sx/themes/Theme.hx",
"sx/tools/PropertiesTools.hx",
"sx/tools/WidgetTools.hx",
"sx/tween/Actuator.hx",
"sx/tween/Tweener.hx",
"sx/widgets/Bmp.hx",
"sx/widgets/Text.hx",
"sx/widgets/TextInput.hx",
"sx/widgets/Widget.hx",
"sx/widgets/base/RendererHolder.hx",
#endif
 0 };

const char *__hxcpp_all_files_fullpath[] = {
#ifdef HXCPP_DEBUGGER
"/usr/lib/haxe/std/List.hx",
"/usr/lib/haxe/std/StringTools.hx",
"/usr/lib/haxe/std/Xml.hx",
"/usr/lib/haxe/std/cpp/Lib.hx",
"/usr/lib/haxe/std/cpp/_std/EReg.hx",
"/usr/lib/haxe/std/cpp/_std/Reflect.hx",
"/usr/lib/haxe/std/cpp/_std/Std.hx",
"/usr/lib/haxe/std/cpp/_std/StringBuf.hx",
"/usr/lib/haxe/std/cpp/_std/Type.hx",
"/usr/lib/haxe/std/cpp/_std/haxe/ds/StringMap.hx",
"/usr/lib/haxe/std/haxe/CallStack.hx",
"/usr/lib/haxe/std/haxe/Log.hx",
"/usr/lib/haxe/std/haxe/Timer.hx",
"/usr/lib/haxe/std/haxe/rtti/Rtti.hx",
"/usr/lib/haxe/std/haxe/rtti/XmlParser.hx",
"/usr/lib/haxe/std/haxe/unit/TestCase.hx",
"/usr/lib/haxe/std/haxe/unit/TestRunner.hx",
"/usr/lib/haxe/std/haxe/xml/Fast.hx",
"/usr/lib/haxe/std/haxe/xml/Parser.hx",
"/usr/lib/haxe/std/haxe/xml/Printer.hx",
"/home/alex/Work/HaXe/sx2-hml/tests/hml/gen/Child.hx",
"/home/alex/Work/HaXe/sx2-hml/tests/src/ChildWidgetNodeTest.hx",
"/home/alex/Work/HaXe/exception/src/Exception.hx",
"/home/alex/Work/HaXe/hunit/src/HUnit.hx",
"/home/alex/Work/HaXe/sx2-hml/tests/hml/gen/Metric.hx",
"/home/alex/Work/HaXe/sx2-hml/tests/src/MetricValueTest.hx",
"/home/alex/Work/HaXe/sx2-hml/tests/hml/gen/Signal.hx",
"/home/alex/Work/HaXe/sx2-hml/tests/src/SignalValueTest.hx",
"/home/alex/Work/HaXe/exception/src/exception/StackTools.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/Match.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/TestCase.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/TestState.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/TestSuite.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/Utils.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/assert/AssertFactory.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/assert/BaseAssert.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/assert/MatchAssert.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/call/Call.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/call/Expect.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/call/Stub.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/exceptions/AssertException.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/exceptions/CircularTestDependencyException.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/exceptions/ExpectedExceptionData.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/exceptions/InvalidTestException.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/exceptions/NoExpectedException.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/exceptions/TestFailException.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/exceptions/UnexpectedCallException.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/exceptions/UnexpectedException.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/exceptions/UnmetExpectationException.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/exceptions/WarningException.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/match/AnyMatch.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/match/CallbackMatch.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/match/ERegMatch.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/match/EqualMatch.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/match/GenericMatchFactory.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/match/Match.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/match/MatchFactory.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/match/MatchFailDescription.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/match/NotEqualMatch.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/match/SimilarMatch.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/match/TypeMatch.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/match/similar/SimilarArrayMatch.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/match/similar/SimilarMapMatch.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/match/similar/SimilarObjectMatch.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/mock/MockBuilder.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/mock/MockData.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/report/DefaultWriter.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/report/TestReport.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/utils/CTypeClassFieldUtils.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/utils/TestCaseData.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/utils/Value.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/warnings/ForcedWarning.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/warnings/IncompleteTestWarning.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/warnings/NoAssertionsWarning.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/warnings/NoTestsWarning.hx",
"/home/alex/Work/HaXe/hunit/src/hunit/warnings/Warning.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/Sx.hx",
"/home/alex/Work/HaXe/sx2-dummy/src/sx/backend/dummy/Backend.hx",
"/home/alex/Work/HaXe/sx2-dummy/src/sx/backend/dummy/BackendManager.hx",
"/home/alex/Work/HaXe/sx2-dummy/src/sx/backend/dummy/BitmapRenderer.hx",
"/home/alex/Work/HaXe/sx2-dummy/src/sx/backend/dummy/Point.hx",
"/home/alex/Work/HaXe/sx2-dummy/src/sx/backend/dummy/TextInputRenderer.hx",
"/home/alex/Work/HaXe/sx2-dummy/src/sx/backend/dummy/TextRenderer.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/ds/ObjectPool.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/exceptions/InvalidBackendException.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/exceptions/LockedPropertyException.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/exceptions/LoopedResizeException.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/exceptions/NoReadException.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/exceptions/NotChildException.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/exceptions/OutOfBoundsException.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/exceptions/SxException.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/layout/Layout.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/properties/Align.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/properties/AutoSize.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/properties/abstracts/AAlign.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/properties/abstracts/AAutoSize.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/properties/abstracts/ACoordinate.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/properties/abstracts/APadding.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/properties/abstracts/ASize.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/properties/abstracts/ASizeGetterProxy.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/properties/abstracts/ASizeSetterProxy.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/properties/displaylist/ArrayDisplayList.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/properties/metric/Coordinate.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/properties/metric/Offset.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/properties/metric/Padding.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/properties/metric/Size.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/properties/metric/SizeSetterProxy.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/signals/Signal.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/skins/ASkin.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/skins/base/SkinBase.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/themes/Theme.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/tools/PropertiesTools.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/tools/WidgetTools.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/tween/Actuator.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/tween/Tweener.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/widgets/Bmp.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/widgets/Text.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/widgets/TextInput.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/widgets/Widget.hx",
"/home/alex/Work/HaXe/sx2-core/src/sx/widgets/base/RendererHolder.hx",
#endif
 0 };

const char *__hxcpp_all_classes[] = {
#ifdef HXCPP_DEBUGGER
"sx.widgets.Widget",
"Child",
"hunit.TestCase",
"ChildWidgetNodeTest",
"cpp.Lib",
"EReg",
"Exception",
"HUnit",
"List",
"_List.ListIterator",
"Metric",
"MetricValueTest",
"Reflect",
"Signal",
"SignalValueTest",
"Std",
"StringBuf",
"StringTools",
"Type",
"Xml",
"exception.StackTools",
"exception._StackTools.IntIterator",
"haxe.CallStack",
"haxe.Log",
"haxe.Timer",
"haxe.ds.StringMap",
"haxe.rtti.Rtti",
"haxe.rtti.XmlParser",
"haxe.unit.TestCase",
"haxe.unit.TestRunner",
"haxe.unit.TestStatus",
"haxe.xml._Fast.NodeAccess",
"haxe.xml._Fast.AttribAccess",
"haxe.xml._Fast.HasAttribAccess",
"haxe.xml._Fast.HasNodeAccess",
"haxe.xml._Fast.NodeListAccess",
"haxe.xml.Fast",
"haxe.xml.Parser",
"haxe.xml.Printer",
"hunit._Match.Match_Impl_",
"hunit.TestState",
"hunit.TestSuite",
"hunit.Utils",
"hunit.assert.AssertFactory",
"hunit.assert.BaseAssert",
"hunit.assert.MatchAssert",
"hunit.call.Call",
"hunit.call.Expect",
"hunit.call.Stub",
"hunit.exceptions.TestFailException",
"hunit.exceptions.AssertException",
"hunit.exceptions.InvalidTestException",
"hunit.exceptions.CircularTestDependencyException",
"hunit.exceptions.ExpectedExceptionData",
"hunit.exceptions.NoExpectedException",
"hunit.exceptions.UnexpectedCallException",
"hunit.exceptions.UnexpectedException",
"hunit.exceptions.UnmetExpectationException",
"hunit.exceptions.WarningException",
"hunit.match.Match",
"hunit.match.AnyMatch",
"hunit.match.CallbackMatch",
"hunit.match.ERegMatch",
"hunit.match.EqualMatch",
"hunit.match.GenericMatchFactory",
"hunit.match.MatchFactory",
"hunit.match.MatchFailDescription",
"hunit.match.NotEqualMatch",
"hunit.match.SimilarMatch",
"hunit.match.ObjectCache",
"hunit.match.TypeMatch",
"hunit.match.similar.SimilarArrayMatch",
"hunit.match.similar.SimilarMapMatch",
"hunit.match.similar._SimilarMapMatch.DynamicMatchMap",
"hunit.match.similar.SimilarObjectMatch",
"hunit.mock.MockBuilder",
"hunit.mock.MockData",
"hunit.report.DefaultWriter",
"hunit.report.TestReport",
"hunit.utils.CTypeClassFieldsUtils",
"hunit.utils.TestCaseData",
"hunit.utils.ValueTools",
"hunit.warnings.Warning",
"hunit.warnings.ForcedWarning",
"hunit.warnings.IncompleteTestWarning",
"hunit.warnings.NoAssertionsWarning",
"hunit.warnings.NoTestsWarning",
"sx.Sx",
"sx.backend.dummy.Backend",
"sx.backend.dummy.BackendManager",
"sx.backend.dummy.BitmapRenderer",
"sx.backend.dummy.Point",
"sx.backend.dummy.TextInputRenderer",
"sx.backend.dummy.TextRenderer",
"sx.ds.ObjectPool",
"sx.exceptions.SxException",
"sx.exceptions.InvalidBackendException",
"sx.exceptions.LockedPropertyException",
"sx.exceptions.LoopedResizeException",
"sx.exceptions.NoReadException",
"sx.exceptions.NotChildException",
"sx.exceptions.OutOfBoundsException",
"sx.layout.Layout",
"sx.properties._Align.HorizontalAlign_Impl_",
"sx.properties._Align.VerticalAlign_Impl_",
"sx.properties._Align.NoneAlign_Impl_",
"sx.properties.Align",
"sx.properties.AutoSize",
"sx.properties.abstracts._AAlign.AAlign_Impl_",
"sx.properties.abstracts._AAlign.WeakAlign",
"sx.properties.abstracts._AAutoSize.AAutoSize_Impl_",
"sx.properties.abstracts._AAutoSize.WeakAutoSize",
"sx.properties.abstracts._ACoordinate.ACoordinate_Impl_",
"sx.properties.metric.Size",
"sx.properties.metric.Coordinate",
"sx.properties.abstracts._ACoordinate.WeakCoordinate",
"sx.properties.abstracts._APadding.APadding_Impl_",
"sx.properties.metric.SizeSetterProxy",
"sx.properties.metric.Padding",
"sx.properties.abstracts._APadding.WeakPadding",
"sx.properties.abstracts._ASize.ASize_Impl_",
"sx.properties.abstracts._ASize.WeakSize",
"sx.properties.abstracts._ASizeGetterProxy.ASizeGetterProxy_Impl_",
"sx.properties.abstracts._ASizeSetterProxy.ASizeSetterProxy_Impl_",
"sx.properties.abstracts._ASizeSetterProxy.WeakSizeSetterProxy",
"sx.properties.displaylist.ArrayDisplayList",
"sx.properties.metric.Offset",
"sx.signals.Signal",
"sx.properties.metric._Size.Size_Internal_ZeroSize",
"sx.skins._ASkin.ASkin_Impl_",
"sx.skins.base.SkinBase",
"sx.themes.Theme",
"sx.tools.OrientationTools",
"sx.tools.SizeTools",
"sx.tools.PaddingTools",
"sx.tools.WidgetTools",
"sx.tween.Actuator",
"sx.tween.Tweener",
"sx.widgets.base.RendererHolder",
"sx.widgets.Bmp",
"sx.widgets.Text",
"sx.widgets.TextInput",
#endif
 0 };
} // namespace hx
void __files__boot() { __hxcpp_set_debugger_info(hx::__hxcpp_all_classes, hx::__hxcpp_all_files_fullpath); }
